(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{478:function(t,a,e){"use strict";e.r(a);var o=e(1),s=Object(o.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"melodot-是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#melodot-是什么"}},[t._v("#")]),t._v(" Melodot 是什么")]),t._v(" "),e("p",[t._v("Melodot 是一个独立的数据可用性层，它是原始数据可用性层的升级版，是模块化区块链的基础设施。Melodot 与数据格式无关，兼容 Substrate/EVM/Cosmos 等几乎一切形式的区块链。结算层无须引入任何额外的假设，而是通过高效的抽样来获得数据可用性保证。Melodot 从一开始便制定了以下设计目标：")]),t._v(" "),e("h3",{attrs:{id:"gb-级别的数据吞吐量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gb-级别的数据吞吐量"}},[t._v("#")]),t._v(" GB 级别的数据吞吐量")]),t._v(" "),e("p",[t._v("Melodot 被设计为大吞吐量的数据可用性层。验证者并不完整下载数据，而是通过抽样初步确保数据可用性，这极大地提升了吞吐量。我们引入了农民和 PoSpace 解决了传统数据可用性层对”最小抽样者数量“的假设，增强系统健壮性的同时进一步提升了吞吐量。")]),t._v(" "),e("h3",{attrs:{id:"基于密码学的安全保证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基于密码学的安全保证"}},[t._v("#")]),t._v(" 基于密码学的安全保证")]),t._v(" "),e("p",[t._v("Melodot 目前使用多项式承诺来确保数据被正确编码，它不需要欺诈证明，从而避免引入额外的安全假设。")]),t._v(" "),e("h3",{attrs:{id:"分布式生成和存储"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分布式生成和存储"}},[t._v("#")]),t._v(" 分布式生成和存储")]),t._v(" "),e("p",[t._v("Melodot 采用分布式生成方法，使验证者像轻客户端一样工作，将数据在列方向扩展的任务分给多个农民，这有效提高了系统的吞吐量并减少了中心化程度。")]),t._v(" "),e("p",[t._v("Melodot 利用 PoSpace 激励机制确保农民诚实存储数据，允许消费级个人电脑参与，实现高度去中心化的分布式存储，同时鼓励农民积极参与数据交换。")]),t._v(" "),e("h3",{attrs:{id:"分片友好"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分片友好"}},[t._v("#")]),t._v(" 分片友好")]),t._v(" "),e("p",[t._v("Melodot 的验证者非常轻，在数据处理上更像一个轻客户端，这对分片极为友好。未来我们可以非常轻松地实现垂直分片，只需要对验证者进行随机分组即可。当垂直分片数量达到 30 个时，单个区块可容纳的最大数据量为 4096 * 32 * 4096 * 30 字节，即 15GB 。")]),t._v(" "),e("p",[t._v("Melodot 不支持智能合约，因此不存在”火车票酒店“问题，这对水平分片非常友好，实施水平分片后在一个区块时间内，数据携带量理论上可达到 PB 级别。但这实际上很难达到，因为我们会遇到一些新的瓶颈，例如结算层和其他参与者需要进入很多网络进行抽样，这很快会达到性能瓶颈。我们将持续寻找这些瓶颈，并努力寻求解决方案。")])])}),[],!1,null,null,null);a.default=s.exports}}]);